-- LABORATORY WORK 4
-- BY Korin_Yosyp
CREATE OR REPLACE TRIGGER D_N_A_U_P
    AFTER UPDATE OF PHONE ON USERS
    FOR EACH ROW
DECLARE 
    U_PHONE USERS.PHONE%TYPE;
BEGIN 
    DELETE FROM NEWS
    WHERE NEWS_ID IN (
            SELECT NEWS.NEWS_ID
            FROM USERS JOIN USERS_NEWS ON USERS.USER_ID = USERS_NEWS.USER_ID_FK,
            USERS_NEWS JOIN NEWS ON USERS_NEWS.NEWS_ID_FK = NEWS.NEWS_ID
            WHERE USERS.PHONE = U_PHONE
            );
END;
/
CREATE OR REPLACE TRIGGER D_P_A_I_U
    AFTER INSERT ON USERS
DECLARE 
    U_ID USERS.USER_ID%TYPE;
    USER_N USERS.USER_NAME%TYPE;
    USER_B USERS.USER_BIRTHDATE%TYPE;
    U_PHONE USERS.PHONE%TYPE := 380900000000;
    USER_P USERS.USER_PASSWORD%TYPE;
BEGIN 
    INSERT INTO USERS(USER_ID, USER_NAME, USER_BIRTHDATE, PHONE, USER_PASSWORD)
    VALUES(U_ID, USER_N, USER_B, U_PHONE, USER_P);
END;

/
SET SERVEROUT ON
DECLARE
    U_I USERS_NEWS.USER_ID_FK%TYPE;
    U_N USERS_NEWS.USER_NAME%TYPE;
    CURSOR READER_CURSOR(HEDER_NEWS USERS_NEWS.NEWS_HEDER%TYPE)
    IS
    SELECT
    USERS_NEWS.USER_ID_FK, USERS_NEWS.USER_NAME
    FROM 
    USERS_NEWS
    WHERE USERS_NEWS.NEWS_HEDER = HEDER_NEWS;
BEGIN
    OPEN READER_CURSOR('temperature hot');
    LOOP
        FETCH READER_CURSOR INTO U_I, U_N;
        IF (READER_CURSOR %FOUND)THEN
            DBMS_OUTPUT.PUT_LINE('TRUE');
            DBMS_OUTPUT.PUT_LINE('USER NAME: ' || U_N || 'USER ID' || U_I);
        ELSE
            DBMS_OUTPUT.PUT_LINE('FALSE');
            EXIT;
        END IF;
    END LOOP;
    CLOSE READER_CURSOR;
END;

/
